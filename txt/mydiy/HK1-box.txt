S905X3  4G+32G

armbian

https://github.com/ophub/amlogic-s9xxx-armbian

https://github.com/ophub/amlogic-s9xxx-openwrt

-----------------
192.168.10.20
192.168.192.20

root  sn:123456

portainer 2.9.1
admin  sn:12345678






OpenWrt_Aml_official_02.10.0038

This is OpenWrt firmware for Amlogic s9xxx tv box

    Firmware information
    Default IP: 192.168.1.1
    Default username: root
    Default password: password
    Default WIFI name: OpenWrt
    Default WIFI password: none
    Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt





Armbian_bullseye_02.10.0233

These are the Armbian OS image

    OS information
    Default username: root
    Default password: 1234
    Install command: armbian-install
    Update command: armbian-update




Armbian_jammy_save_2023.07

  Default username: root
  Default password: 1234
  Install command: armbian-install
  Update command: armbian-update

https://github.com/ophub/amlogic-s9xxx-armbian/releases/download/Armbian_jammy_save_2023.07/Armbian_23.08.0_amlogic_s905x3_jammy_5.15.120_server_2023.07.08.img.gz




armbian包括Jammy、Bullseye两张版本，Jammy是Ubuntu 22.04 的代号，Bullseye是Debian 11的代号。Debian还是Ubuntu自选，Ubuntu是基于Debian。Ubuntu最新版本是Lunar Lobster 23.04 LTS。我开始用的是同版本jammy，后来改成bullseye重做了一遍 
--------------------------------

--------------------------------

https://www.bilibili.com/video/BV1v44y1G7Lh/
HK1 box 刷入Armbian 并安装Docker 刷armbian 电视盒子刷armbian


https://blog.csdn.net/baidu_41883827/article/details/111570777
斐讯N1刷Armbian后使用命令连接WiFi

https://blog.csdn.net/WalterBrien/article/details/128174212
HK1 BOX刷入 Armbian系统作为服务器

https://www.right.com.cn/forum/thread-5601861-1-1.html
HK1 BOX 刷armbian 成功


--------------------------------------------
写入U盘引导启动:


1,将下载的img文件，用Win32DiskImager，写入U盘.

2,进入boot文件夹，找到uEnv.txt


   选择改:
   X96 MAX PLUS Q2, X96 Air Q1000  .dtb

   才能正常引导启动.


   刷了armbian后，再刷OpenWrt，就不成功.

3,将U盘插入离网口最近的USB口，重新上电，即可引导启动，不用牙签插入3.5mm耳机口按压。

------------------------------------------
将armbian写入EMMC:
root / 1234

1, armbian-install -m no -a yes

    选  512   meson-sm1-hk1box-vontar-x3.dtb
    选  ext4

2, armbian-config 
    wifi  约1小时自动关闭

3, armbian-docker /armbian-docker install

4, #下载 Docker 图形化界面 portainer  2.9.1         
         docker pull portainer/portainer-ce:2.9.1
         docker pull portainer/portainer-ce:2.17.0
    #创建 portainer 容器
         docker volume create portainer_data
    #运行 portainer
         docker run -d -p 9000:9000 --name portainer --restart always -v     /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.9.1

5,  添加LED屏幕显示至开机自启动任务

    armbian-openvfd 16 开LED
    armbian-openvfd 0  关LED

---------------------------------
df -h 显示已经挂载的分区列表 



Filesystem      Size  Used Avail Use% Mounted on
udev            1.7G     0  1.7G   0% /dev
tmpfs           368M  5.5M  363M   2% /run
/dev/mmcblk2p2   29G  2.1G   27G   8% /
tmpfs           1.8G     0  1.8G   0% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           1.8G   12K  1.8G   1% /tmp
/dev/mmcblk2p1  252M  102M  150M  41% /boot
/dev/zram1       49M  2.7M   43M   6% /var/log
tmpfs           368M     0  368M   0% /run/user/0
overlay          29G  2.1G   27G   8% /var/lib/docker/overlay2/



****
/srv/config/



-------------------------------
https://blog.csdn.net/iduzy/article/details/121710923
N1刷armbian安装SMB做文件共享

1,执行安装命令

apt install samba


2, 修改配置文件/etc/samba/smb.conf，直接覆盖原内容，实现匿名直接连接。

vim nano /etc/samba/smb.conf

简洁版

[global]
       workgroup = WORKGROUP
       security = user
       map to guest = Bad User
[media]
       comment = resources
       path = /home/public
       public = yes
       writable = yes
       guest ok = yes
       browseable = yes
    
修改目录权限
    mkdir /home/public
    chmod -R 777 /home/public
    

\\192.168.11.20\media
----

重启服务使设定生效
service smbd restart

启动
service smbd start
关闭
service smbd stop
查看运行状态
service smbd status
开机自启（默认就是开机自启）
systemctl enable smbd


----------------------------------------




LED 屏显示控制说明



github.com/ophub/amlogic-s9xxx-armbian/blob/main/build-armbian/documents/led_screen_display_control.md







配置文件放在 Armbian/OpenWrt 系统的 /usr/share/openvfd 目录下，Armbian 系统的命令文件位于 /usr/sbin/armbian-openvfd，OpenWrt 系统的命令文件位于 /usr/sbin/openwrt-openvfd。如果当前系统中没有的可以手动上传，并赋予文件执行权限：chmod +x /usr/share/openvfd/vfdservice /usr/sbin/*-openvfd

目前有 x96max.conf、x96maxplus.conf、h96max-x3.conf、hk1-x3.conf、hk1box.conf、tx3.conf、x96air.conf 等设备经过测试，其他设备的配置可以查看：arthur-liberman/vfd-configurations 和 LibreELEC/linux_openvfd 进行修改


 /usr/share/openvfd/conf 目录下，输入命令 armbian-openvfd 16 进行测试。

通过命令 armbian-openvfd 0 可以禁用 LED 显示并清除系统进程，在每次测试新的配置前，请先执行此禁用命令，再执行 armbian-openvfd 16 进行更改后的配置测试。




hk1box.conf


vfd_gpio_clk='0,64,0'
vfd_gpio_dat='0,63,0'
vfd_gpio_stb='0,0,0xFF'


# 在终端执行以下命令启用 openvfd 服务
sed -i 's|^#*openvfd_enable=.*|openvfd_enable="yes"|g' /etc/custom_service/start_service.sh
sed -i 's|^#*openvfd_boxid=.*|openvfd_boxid="16"|g' /etc/custom_service/start_service.sh


--------------------------------
Armbian 配置 WIFI 教程
https://blog.csdn.net/hailangnet/article/details/118110720
https://zhuanlan.zhihu.com/p/201516668

通过 nmcli 连上 WIFI

nmcli 是一个命令行工具，用于控制 NetworkManager；还可以用来显示网络设备状态；创建、编辑、开启/关闭和删除网络连接 。Armbian 系统默认自带 nmcli， 这里不介绍安装方法。

通过 nmcli 直接连上 WIFI 后，系统会记录已保存的 AP。下面是具体的连接方法：

 1.  查看设备状态：

$ nmcli device status
DEVICE  TYPE      STATE         CONNECTION         
enp1s0  ethernet  connected     Wired connection 1 
wlp2s0  wifi      disconnected  --                 
lo      loopback  unmanaged     --  

这里 wlp2s0 类型为 wifi，表示我们的无线网卡，状态为 disconnected, 还没有连上 WIFI 热点。

2. 检查 radio:

$ nmcli radio
WIFI-HW  WIFI     WWAN-HW  WWAN    
enabled  enabled  enabled  enabled 

3. 查看附近无线网络信号：

$ nmcli dev wifi list
SSID                  MODE   CHAN  RATE       SIGNAL  BARS  SECURITY 
MYSSID         Infra  11    54 Mbit/s  100     ▂▄▆█  WPA2     
MYSSID         Infra  132   54 Mbit/s  100     ▂▄▆█  WPA2     
SOMEOTHERSSID  Infra  52    54 Mbit/s  49      ▂▄__  WPA2     
MYSSID         Infra  149   54 Mbit/s  45      ▂▄__  WPA2     
MYSSID         Infra  11    54 Mbit/s  42      ▂▄__  WPA2     
SOMEOTHERSSID  Infra  1     54 Mbit/s  27      ▂___  WPA2

第5列表示信号情况，信号越好的 AP，会越靠前。

4. 连上 AP 热点：

    如果是无密码的 WIFI， 执行以下连接命令，SSID 就是我们所说的 WIFI 名:

$ nmcli device wifi connect <SSID|BSSID>

    加密的 AP, 使用以下命令：

$ nmcli device wifi connect <SSID|BSSID> password <password>

执行命令没有报错后，再 Ping 下百度是否可达，能 Ping 通就表明已经连上 AP，可以正常上网。


--------------------------------

如何在 Linux 中使用 nmcli 连接 WiFi？
https://cloud.tencent.com/developer/article/2296806

了解 nmcli
nmcli 是 NetworkManager 的命令行工具，它与 NetworkManager 一起管理网络连接。NetworkManager 是一个常见的网络管理程序，用于配置和管理网络接口、连接和设备等。nmcli 提供了一个直观和灵活的方式来管理网络连接，包括以交互或脚本方式连接到 WiFi 网络。


连接到 WiFi 网络

以下是在 Linux 中使用 nmcli 连接 WiFi 网络的详细步骤：
步骤 1: 打开终端

首先，打开 Linux 终端。您可以使用终端模拟器（如 GNOME Terminal、Konsole 或 xterm）或通过快捷键组合（如 Ctrl+Alt+T）打开终端。
步骤 2: 查看可用的 WiFi 网络

执行以下命令来查看可用的 WiFi 网络列表：

nmcli device wifi list

这将显示附近的 WiFi 网络以及它们的名称（SSID）、信号强度、频道和加密方式等信息。
步骤 3: 连接到 WiFi 网络

选择要连接的 WiFi 网络，并执行以下命令以连接到该网络：

nmcli device wifi connect <SSID> password <password>

将 <SSID> 替换为要连接的 WiFi 网络的名称，<password> 替换为网络的密码。如果网络没有密码，则不需要提供 password 参数。
步骤 4: 验证连接

连接成功后，可以执行以下命令来验证 WiFi 连接：

nmcli connection show

该命令将显示当前的网络连接状态，包括已连接的 WiFi 网络。
连接到隐藏的 WiFi 网络

有些 WiFi 网络可能被设置为隐藏，即不在可见的网络列表中显示。在这种情况下，您需要手动配置连接。以下是连接到隐藏的 WiFi 网络的步骤：
步骤 1: 打开终端

打开终端，进入命令行界面。
步骤 2: 创建一个新的连接

执行以下命令创建一个新的连接配置：

nmcli connection add type wifi con-name <connection-name> ifname <interface-name> ssid <SSID>

将 <connection-name> 替换为您想要给连接起的名称，<interface-name> 替换为您的无线网络接口名称，<SSID> 替换为隐藏的 WiFi 网络的名称。
步骤 3: 配置连接参数

执行以下命令来配置连接的参数：

nmcli connection modify <connection-name> wifi.hidden yes

将 <connection-name> 替换为您在上一步中创建的连接的名称。
步骤 4: 输入密码并连接

执行以下命令以输入密码并连接到隐藏的 WiFi 网络：

nmcli connection up <connection-name> password <password>

将 <connection-name> 替换为您在步骤 2 中创建的连接的名称，<password> 替换为网络的密码。
步骤 5: 验证连接

连接成功后，可以执行以下命令来验证 WiFi 连接：

nmcli connection show

该命令将显示当前的网络连接状态，包括已连接的 WiFi 网络。
其他 nmcli 命令

nmcli 提供了许多其他有用的命令来管理和配置网络连接。以下是一些常用的 nmcli 命令：

    nmcli connection show：显示所有的网络连接。
    nmcli connection delete <connection-name>：删除指定的网络连接。
    nmcli radio wifi on：启用 WiFi 网络。
    nmcli radio wifi off：禁用 WiFi 网络。

您可以通过执行 nmcli --help 命令或参考 nmcli 的文档来了解更多 nmcli 命令和选项。






