S905X3  4G+32G

armbian

https://github.com/ophub/amlogic-s9xxx-armbian

https://github.com/ophub/amlogic-s9xxx-openwrt

-----------------
192.168.10.20
192.168.192.20

root  sn:123456

portainer 2.9.1
admin  sn:12345678






OpenWrt_Aml_official_02.10.0038

This is OpenWrt firmware for Amlogic s9xxx tv box

    Firmware information
    Default IP: 192.168.1.1
    Default username: root
    Default password: password
    Default WIFI name: OpenWrt
    Default WIFI password: none
    Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt





Armbian_bullseye_02.10.0233

These are the Armbian OS image

    OS information
    Default username: root
    Default password: 1234
    Install command: armbian-install
    Update command: armbian-update




Armbian_jammy_save_2023.07

  Default username: root
  Default password: 1234
  Install command: armbian-install
  Update command: armbian-update

https://github.com/ophub/amlogic-s9xxx-armbian/releases/download/Armbian_jammy_save_2023.07/Armbian_23.08.0_amlogic_s905x3_jammy_5.15.120_server_2023.07.08.img.gz




armbian包括Jammy、Bullseye两张版本，Jammy是Ubuntu 22.04 的代号，Bullseye是Debian 11的代号。Debian还是Ubuntu自选，Ubuntu是基于Debian。Ubuntu最新版本是Lunar Lobster 23.04 LTS。

Ubuntu-jammy，兼容性好点。。。。。
--------------------------------

--------------------------------

https://www.bilibili.com/video/BV1v44y1G7Lh/
HK1 box 刷入Armbian 并安装Docker 刷armbian 电视盒子刷armbian


https://blog.csdn.net/baidu_41883827/article/details/111570777
斐讯N1刷Armbian后使用命令连接WiFi

https://blog.csdn.net/WalterBrien/article/details/128174212
HK1 BOX刷入 Armbian系统作为服务器

https://www.right.com.cn/forum/thread-5601861-1-1.html
HK1 BOX 刷armbian 成功


--------------------------------------------
写入U盘引导启动:


1,将下载的img文件，用Win32DiskImager，写入U盘.

2,进入boot文件夹，找到uEnv.txt


   选择改:
   X96 MAX PLUS Q2, X96 Air Q1000  .dtb

   才能正常引导启动.


   刷了armbian后，再刷OpenWrt，就不成功.

3,将U盘插入离网口最近的USB口，重新上电，即可引导启动，不用牙签插入3.5mm耳机口按压。

------------------------------------------
将armbian写入EMMC:
root / 1234

1, armbian-install -m no -a yes

    选  512   meson-sm1-hk1box-vontar-x3.dtb
    选  ext4

2, armbian-config 
    wifi  约1小时自动关闭

3, armbian-docker /armbian-docker install

4, #下载 Docker 图形化界面 portainer  2.9.1         
         docker pull portainer/portainer-ce:2.9.1
         docker pull portainer/portainer-ce:2.17.0
    #创建 portainer 容器
         docker volume create portainer_data
    #运行 portainer
         docker run -d -p 9000:9000 --name portainer --restart always -v     /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.9.1

5,  添加LED屏幕显示至开机自启动任务

    armbian-openvfd 16 开LED
    armbian-openvfd 0  关LED

---------------------------------
df -h 显示已经挂载的分区列表 



Filesystem      Size  Used Avail Use% Mounted on
udev            1.7G     0  1.7G   0% /dev
tmpfs           368M  5.5M  363M   2% /run
/dev/mmcblk2p2   29G  2.1G   27G   8% /
tmpfs           1.8G     0  1.8G   0% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           1.8G   12K  1.8G   1% /tmp
/dev/mmcblk2p1  252M  102M  150M  41% /boot
/dev/zram1       49M  2.7M   43M   6% /var/log
tmpfs           368M     0  368M   0% /run/user/0
overlay          29G  2.1G   27G   8% /var/lib/docker/overlay2/



****
/srv/config/



-------------------------------
https://blog.csdn.net/iduzy/article/details/121710923
N1刷armbian安装SMB做文件共享

1,执行安装命令

apt install samba


2, 修改配置文件/etc/samba/smb.conf，直接覆盖原内容，实现匿名直接连接。

vim nano /etc/samba/smb.conf

简洁版

[global]
       workgroup = WORKGROUP
       security = user
       map to guest = Bad User
[media]
       comment = resources
       path = /home/public
       public = yes
       writable = yes
       guest ok = yes
       browseable = yes
    
修改目录权限
    mkdir /home/public
    chmod -R 777 /home/public
    

\\192.168.11.20\media
----

重启服务使设定生效
service smbd restart

启动
service smbd start
关闭
service smbd stop
查看运行状态
service smbd status
开机自启（默认就是开机自启）
systemctl enable smbd


----------------------------------------




LED 屏显示控制说明



github.com/ophub/amlogic-s9xxx-armbian/blob/main/build-armbian/documents/led_screen_display_control.md







配置文件放在 Armbian/OpenWrt 系统的 /usr/share/openvfd 目录下，Armbian 系统的命令文件位于 /usr/sbin/armbian-openvfd，OpenWrt 系统的命令文件位于 /usr/sbin/openwrt-openvfd。如果当前系统中没有的可以手动上传，并赋予文件执行权限：chmod +x /usr/share/openvfd/vfdservice /usr/sbin/*-openvfd

目前有 x96max.conf、x96maxplus.conf、h96max-x3.conf、hk1-x3.conf、hk1box.conf、tx3.conf、x96air.conf 等设备经过测试，其他设备的配置可以查看：arthur-liberman/vfd-configurations 和 LibreELEC/linux_openvfd 进行修改


 /usr/share/openvfd/conf 目录下，输入命令 armbian-openvfd 16 进行测试。

通过命令 armbian-openvfd 0 可以禁用 LED 显示并清除系统进程，在每次测试新的配置前，请先执行此禁用命令，再执行 armbian-openvfd 16 进行更改后的配置测试。




hk1box.conf


vfd_gpio_clk='0,64,0'
vfd_gpio_dat='0,63,0'
vfd_gpio_stb='0,0,0xFF'


# 在终端执行以下命令启用 openvfd 服务
sed -i 's|^#*openvfd_enable=.*|openvfd_enable="yes"|g' /etc/custom_service/start_service.sh
sed -i 's|^#*openvfd_boxid=.*|openvfd_boxid="16"|g' /etc/custom_service/start_service.sh


--------------------------------
Armbian 配置 WIFI 教程
https://blog.csdn.net/hailangnet/article/details/118110720
https://zhuanlan.zhihu.com/p/201516668

通过 nmcli 连上 WIFI

nmcli 是一个命令行工具，用于控制 NetworkManager；还可以用来显示网络设备状态；创建、编辑、开启/关闭和删除网络连接 。Armbian 系统默认自带 nmcli， 这里不介绍安装方法。

通过 nmcli 直接连上 WIFI 后，系统会记录已保存的 AP。下面是具体的连接方法：

 1.  查看设备状态：

$ nmcli device status
DEVICE  TYPE      STATE         CONNECTION         
enp1s0  ethernet  connected     Wired connection 1 
wlp2s0  wifi      disconnected  --                 
lo      loopback  unmanaged     --  

这里 wlp2s0 类型为 wifi，表示我们的无线网卡，状态为 disconnected, 还没有连上 WIFI 热点。

2. 检查 radio:

$ nmcli radio
WIFI-HW  WIFI     WWAN-HW  WWAN    
enabled  enabled  enabled  enabled 

3. 查看附近无线网络信号：

$ nmcli dev wifi list
SSID                  MODE   CHAN  RATE       SIGNAL  BARS  SECURITY 
MYSSID         Infra  11    54 Mbit/s  100     ▂▄▆█  WPA2     
MYSSID         Infra  132   54 Mbit/s  100     ▂▄▆█  WPA2     
SOMEOTHERSSID  Infra  52    54 Mbit/s  49      ▂▄__  WPA2     
MYSSID         Infra  149   54 Mbit/s  45      ▂▄__  WPA2     
MYSSID         Infra  11    54 Mbit/s  42      ▂▄__  WPA2     
SOMEOTHERSSID  Infra  1     54 Mbit/s  27      ▂___  WPA2

第5列表示信号情况，信号越好的 AP，会越靠前。

4. 连上 AP 热点：

    如果是无密码的 WIFI， 执行以下连接命令，SSID 就是我们所说的 WIFI 名:

$ nmcli device wifi connect <SSID|BSSID>

    加密的 AP, 使用以下命令：

$ nmcli device wifi connect <SSID|BSSID> password <password>

执行命令没有报错后，再 Ping 下百度是否可达，能 Ping 通就表明已经连上 AP，可以正常上网。


--------------------------------

如何在 Linux 中使用 nmcli 连接 WiFi？
https://cloud.tencent.com/developer/article/2296806

了解 nmcli
nmcli 是 NetworkManager 的命令行工具，它与 NetworkManager 一起管理网络连接。NetworkManager 是一个常见的网络管理程序，用于配置和管理网络接口、连接和设备等。nmcli 提供了一个直观和灵活的方式来管理网络连接，包括以交互或脚本方式连接到 WiFi 网络。


连接到 WiFi 网络

以下是在 Linux 中使用 nmcli 连接 WiFi 网络的详细步骤：
步骤 1: 打开终端

首先，打开 Linux 终端。您可以使用终端模拟器（如 GNOME Terminal、Konsole 或 xterm）或通过快捷键组合（如 Ctrl+Alt+T）打开终端。
步骤 2: 查看可用的 WiFi 网络

执行以下命令来查看可用的 WiFi 网络列表：

nmcli device wifi list

这将显示附近的 WiFi 网络以及它们的名称（SSID）、信号强度、频道和加密方式等信息。
步骤 3: 连接到 WiFi 网络

选择要连接的 WiFi 网络，并执行以下命令以连接到该网络：

nmcli device wifi connect <SSID> password <password>

将 <SSID> 替换为要连接的 WiFi 网络的名称，<password> 替换为网络的密码。如果网络没有密码，则不需要提供 password 参数。
步骤 4: 验证连接

连接成功后，可以执行以下命令来验证 WiFi 连接：

nmcli connection show

该命令将显示当前的网络连接状态，包括已连接的 WiFi 网络。
连接到隐藏的 WiFi 网络

有些 WiFi 网络可能被设置为隐藏，即不在可见的网络列表中显示。在这种情况下，您需要手动配置连接。以下是连接到隐藏的 WiFi 网络的步骤：
步骤 1: 打开终端

打开终端，进入命令行界面。
步骤 2: 创建一个新的连接

执行以下命令创建一个新的连接配置：

nmcli connection add type wifi con-name <connection-name> ifname <interface-name> ssid <SSID>

将 <connection-name> 替换为您想要给连接起的名称，<interface-name> 替换为您的无线网络接口名称，<SSID> 替换为隐藏的 WiFi 网络的名称。
步骤 3: 配置连接参数

执行以下命令来配置连接的参数：

nmcli connection modify <connection-name> wifi.hidden yes

将 <connection-name> 替换为您在上一步中创建的连接的名称。
步骤 4: 输入密码并连接

执行以下命令以输入密码并连接到隐藏的 WiFi 网络：

nmcli connection up <connection-name> password <password>

将 <connection-name> 替换为您在步骤 2 中创建的连接的名称，<password> 替换为网络的密码。
步骤 5: 验证连接

连接成功后，可以执行以下命令来验证 WiFi 连接：

nmcli connection show

该命令将显示当前的网络连接状态，包括已连接的 WiFi 网络。
其他 nmcli 命令

nmcli 提供了许多其他有用的命令来管理和配置网络连接。以下是一些常用的 nmcli 命令：

    nmcli connection show：显示所有的网络连接。
    nmcli connection delete <connection-name>：删除指定的网络连接。
    nmcli radio wifi on：启用 WiFi 网络。
    nmcli radio wifi off：禁用 WiFi 网络。

您可以通过执行 nmcli --help 命令或参考 nmcli 的文档来了解更多 nmcli 命令和选项。

------------------------------------------------------------

如何 设置 ubuntu 的 vsftpd

vsftpd（Very Secure FTP Daemon）是一个轻量级、安全的FTP服务器，广泛用于在Linux系统（如Ubuntu）上提供文件传输服务。以下是在Ubuntu系统上安装和配置vsftpd的详细步骤：

一、安装 vsftpd
更新系统包列表：
打开终端，运行以下命令以确保系统包列表是最新的：
bash复制
sudo apt update
安装 vsftpd：
使用以下命令安装vsftpd：
bash复制
sudo apt install vsftpd
启动 vsftpd 服务：
安装完成后，启动vsftpd服务：
bash复制
sudo systemctl start vsftpd
设置开机自启：
为了确保系统重启后vsftpd服务自动启动，运行以下命令：
bash复制
sudo systemctl enable vsftpd

二、配置 vsftpd
vsftpd的配置文件位于/etc/vsftpd.conf。你可以使用文本编辑器（如nano或vim）来编辑它。
备份配置文件：
在修改配置文件之前，建议先备份原始文件：
bash复制
sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.bak
编辑配置文件：
使用文本编辑器打开配置文件：
bash复制
sudo nano /etc/vsftpd.conf
下面是一些常见的配置选项及其说明：
允许本地用户登录：
确保以下行未被注释（即去掉行前的#）：
local_enable=YES
允许上传文件：
如果你想允许用户上传文件，确保以下行未被注释：
write_enable=YES
启用被动模式：
如果你的FTP服务器需要支持被动模式，可以添加以下行：
pasv_enable=YES
限制用户访问自己的目录：
如果你想限制用户只能访问自己的主目录，添加以下行：
chroot_local_user=YES
启用匿名访问（可选）：
如果你想允许匿名用户访问FTP服务器，确保以下行未被注释：
anonymous_enable=YES
设置匿名用户根目录（可选）：
如果你启用了匿名访问，可以指定匿名用户的根目录。例如：
anon_root=/home/public
设置用户列表（可选）：
如果你只想允许某些用户访问FTP服务器，可以使用userlist_enable和userlist_file选项。例如：
复制
userlist_enable=YES
userlist_file=/etc/vsftpd.userlist
userlist_deny=NO
local_root=/home/public
然后将允许访问FTP的用户名添加到/etc/vsftpd.userlist文件中。
修改完成后，保存并关闭文件。

修改监听端口：
在配置文件中，找到以下行（如果没有则添加）：
listen_port=21
将21替换为你想要的端口号，例如2121：
listen_port=2121


重启 vsftpd 服务：
保存配置文件后，重启vsftpd服务以使更改生效：
bash复制
sudo systemctl restart vsftpd

三、配置防火墙
确保防火墙允许FTP流量。默认情况下，FTP使用端口21。
允许FTP端口：
如果你使用的是ufw防火墙，运行以下命令：
bash复制
sudo ufw allow 21/tcp
sudo ufw reload
如果你启用了被动模式，还需要允许被动模式使用的端口范围。例如，如果你的被动模式端口范围是30000-30009，运行以下命令：
bash复制
sudo ufw allow 30000:30009/tcp
sudo ufw reload
检查防火墙状态：
确保防火墙已正确配置：
bash复制
sudo ufw status

四、测试 FTP 服务
使用FTP客户端连接：
你可以使用任何FTP客户端（如FileZilla）来测试FTP服务器。输入服务器的IP地址、用户名和密码，尝试连接。
检查日志文件：
如果连接失败，可以查看vsftpd的日志文件以获取错误信息。日志文件通常位于/var/log/目录下，例如/var/log/syslog或/var/log/vsftpd.log（如果已启用日志记录）。

五、其他注意事项
安全性：
确保FTP服务器的密码足够复杂。
考虑使用SFTP（SSH文件传输协议）或FTPS（FTP over SSL/TLS）来提高安全性。
用户权限：
根据需要调整用户权限，确保用户只能访问和操作他们需要的文件和目录。
被动模式端口范围：
如果你启用了被动模式，确保防火墙允许被动模式使用的端口范围。
通过以上步骤，你可以在Ubuntu系统上成功安装和配置vsftpd，并根据需求进行定制。




在 Ubuntu 中创建用户，
 sudo useradd -m [username]

执行上述命令后，只需将“[username]”替换为用户名，“-m”选项用于创建新创建的用户的主目录，例如，假设用户名为“Paul”在Ubuntu中添加，上面的命令会改变：
 sudo useradd -m Paul

用户已创建，但是为了使用户帐户更安全，请使用以下命令设置密码：
 sudo passwd Paul

执行命令时，会要求设置密码，然后重新输入密码以匹配两个密码。

要从用户中删除用户，请使用 userdel 命令，例如，要删除用户“Paul”，请运行以下命令：
 sudo userdel -r Paul


#####
1,将允许访问FTP的用户名添加到/etc/vsftpd.userlist文件中,
2,在 Ubuntu 中创建用户:   sudo useradd -m [username]
3,设置密码：   sudo passwd [username]
4,启用匿名访问,没成功。
5,ufw防火墙,本来就没有安装。


-------------------------------------------------------

tailscale.com


version: '3.7'
services:
    tailscale:
        container_name: tailscale
        volumes:
            - /srv/config/tailscale/var/lib:/var/lib
            - /srv/config/tailscale/dev/net/tun:/dev/net/tun
        network_mode: host
        restart: unless-stopped
        environment:
            - TS_AUTHKEY=             ????????tskey-auth
            - TS_EXTRA_ARGS=--advertise-exit-node
            - TS_ROUTES=192.168.31.0/24
            - TS_HOSTNAME=hk1-box
            - TS_STATE_DIR=./state/
        image: tailscale/tailscale:v1.80.0

docker run -d --name=tailscaled -v /var/lib:/var/lib -v /dev/net/tun:/dev/net/tun --network=host --cap-add=NET_ADMIN --cap-add=NET_RAW tailscale/tailscale


docker pull tailscale/tailscale:v1.80.0

-------------------------------------------------------


tinyproxy

https://www.cnblogs.com/sugartang/p/18447561
两种方案手把手教你多种服务器使用tinyproxy搭建http代理

http://www.suiw9.com/post/392.html
Linux上使用tinyproxy快速搭建HTTP/HTTPS代理器



安装Tinyproxy
sudo apt-get install tinyproxy

定义配置文件
sudo vim /etc/tinyproxy/tinyproxy.conf

绑定监听端口号
Port 8888

访问来源限制
Allow 172.16.0.0/24
Allow 192.168.1.0/24



启动 Tinyproxy:
sudo systemctl start tinyproxy

检查状态:
sudo systemctl status tinyproxy

停止 Tinyproxy:
sudo systemctl stop tinyproxy

重启 Tinyproxy:
sudo systemctl restart tinyproxy



安装tinyproxy镜像
docker pull monokal/tinyproxy:latest
docker run -d --name='tinyproxy' -p 8888:8888 monokal/tinyproxy:latest ANY



-------------------------------------------------------
