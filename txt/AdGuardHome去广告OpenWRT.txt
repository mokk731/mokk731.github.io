https://gitee.com/halflife/list/raw/master/ad.txt
ad.txt：[推荐移动端]合并自乘风视频广告过滤规则、EasylistChina、EasylistLite、CJX'sAnnoyance，以及补充的一些规则 

   ABP/ublock订阅规则


EasylistChina    ****
https://easylist-downloads.adblockplus.org/easylistchina.txt


----------------------------------------------------------------

https://stgod.com/4697/
使用 AdGuard Home 自建 DNS 防污染、去广告 #2 – 优化增强设置详解教程

上游 DNS 服务器
这里的上游 DNS 自然是要选择 DoT/​DoH 加密技术的服务器的，可以防止 DNS 解析记录被劫持、篡改以及跟踪。缺点是可能对解析速度会有些许影响，毕竟 TCP 协议不如 UDP 来得有效率，且加解密需要一点时间，
不过在机器性能不错且网络通畅的情况下其实是可以忽略的，都是毫秒级别的差距。
中国大陆网络环境推荐选择腾讯 (DNS­Pod) 和阿里的公共 DNS 。
tls://dns.pub
https://dns.pub/dns-query
tls://dns.alidns.com
https://dns.alidns.com/dns-query
https://dns.cloudflare.com/dns-query


DNS 服务设定
速度限制：200
使用 EDNS ：前面提及的上游 DNS 服务器都是支持 EDNS (ECS) 的，它有助于获取到更合适的 CDN 节点，建议勾选。
使用 DNSSEC : 用于效验 DNS 记录的签名，防止 DNS 缓存被投毒，建议勾选。勾选后会在日志页面请求列显示小绿锁图标。  很慢，要关。

DNS 缓存配置
缓存大小:8000100
覆盖最小 TTL 值：600
覆盖最大 TTL 值：3600

------------------------------------

*上游DNS服务器列表:

119.29.29.29

1.2.4.8

101.226.4.6

tcp://114.114.114.114

tcp://223.5.5.5

tcp://223.6.6.6

tcp://8.8.4.4

tcp://202.14.67.4

tcp://202.14.67.14

tcp://202.130.97.65

tcp://202.130.97.66

tcp://168.95.192.1

https://1.1.1.1/dns-query

https://1.0.0.1/dns-query

tls://8.8.8.8

tls://8.8.4.4

tls://dns.google:853

https://dns.adguard.com/dns-query
https://dns.cloudflare.com/dns-query


------------------------------
上游DNS 


119.29.29.29

223.5.5.5

223.6.6.6

tcp://8.8.4.4

https://1.1.1.1/dns-query


-------------------------

116.116.116.116

221.5.88.88

119.29.29.29
223.5.5.5


----------------------------

https://zhuanlan.zhihu.com/p/367840918
广告再见--AdGuardHome神器



https://www.right.com.cn/FORUM/thread-4090928-1-1.html
来吧，AdGuardHome去广告和DNS正确姿势


重定向53端口到AdGuardHome  

我个人一直使用的53端口替代dnsmasq，没啥附作用，挺好的，而且这种配置方法也适合docker和linux安装AdGuardHome

重定向勾选并启动AdGuardHome后会自动改写dnsmasq的DHCP/DNS配置转发。一般都是  127.0.0.1#你的自定义端口，

（这里把逻辑给捊一下，DNS软件或远程DNS服务器解析默认端口都是53，L大的固件默认也是53，而且优先级最高，而openwrt

里的太多设置DNS插件和需要用到dns的插件，怕小白们弄冲突所有上面有把防火墙注销掉，其实明白了原理防火墙那里53优先

配置最好不注销，让AdGuardHome占用53端口，所以建议新手直接把dnsmasq改个端口变相达到弃用的目的，按我的方法执行下

去就变成了让AdGuardHome的DNS配置代替L大默认的dnsmasq）

---------------------------------------------

************

1.DHCP/DNS配置-高级设置-DNS服务器端口:53

2.DHCP/DNS-常规设置-DNS转发:127.0.0.1#533

3.AdGuardHome-手动设置-dns:port:533

4.AdGuardHome-533重定向-作为dnsmasq的上游服务器.   重定向53端口到AdGuardHome




------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------


https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-2.html
AdGuard Home 自建 DNS 防污染、去广告教程 #2 - 优化增强设置详解

macvlan 网络模式
TIPS: 准确来说应该叫“macvlan 网络下的 bridge 模式”，因为说起来太拗口，而且 macvlan 其他模式很少使用，同时也为了和默认的 bridge 网络模式做区分，所以博主习惯将它称之为“macvlan 网络模式”。
使用 macvlan 网络模式的好处是容器相当于是一个独立的设备，可以拥有一个独立且固定的 IP 和 MAC 地址，不需要理会任何端口的状态，所有端口都可以使用默认的，兼容性更好。你甚至可以部署多个 Ad­Guard Home ，用作不同的用途，灵活度非常高。非常适合在本地局域网下的使用，就比如你可以部署在 NAS 上。macvlan 网络模式唯一缺点是宿主机无法与容器直接通讯（Docker 为了安全性做了隔离处理），如果宿主机想要使用可能需要进行一些特殊的设置，或者通过路由器转发的方式使用。


上游 DNS 服务器
AdGuard 文档中给出了一些知名的 DNS 服务器供选择。

根据所在网络环境的不同推荐以下两组支持 ECS 功能的 DNS 服务器。如果有科学魔法爱国上网需求，你应该部署两个 Ad­Guard Home ，通过 DNS 分流才能达到较为理想的防污染和去广告效果。

中国大陆网络环境推荐选择腾讯 (DNSPod) 和阿里云的公共 DNS 。使用它们你会惊奇的发现偶尔某些不存在的网站都是能正常解析的，只不过解析的结果并不是离你的代理服务器最近的 IP ，所以效果并不理想，而且非常不稳定。

TIPS: 中国大陆不推荐使用任何海外的 DNS ，因为延迟很高且都受到了不同程度的干扰，可用性不高，强行设置只会得到减速效果或者报错。
tls://dns.pub
https://dns.pub/dns-query
tls://dns.alidns.com
https://dns.alidns.com/dns-query
国际网络环境，比如海外的 VPS 或者给科学魔法爱国上网软件做 DNS ，则推荐使用 Google 和 Quad9 的公共 DNS。给科学魔法爱国上网软件使用的前提是它们必须在魔法名单中。

tls://dns.google
https://dns.google/dns-query
tls://dns11.quad9.net
https://dns11.quad9.net/dns-query
如果你看过《AdGuard Home 是什么？为什么无法去广告？》那篇文章，那么你一定还记得 DoT/​DoH 技术。所以这里的上游 DNS 自然是要选择 DoT/​DoH 加密技术的服务器的，可以防止 DNS 解析记录被劫持、篡改以及跟踪。缺点是可能对解析速度会有些许影响，毕竟 TCP 协议不如 UDP 来得有效率，且加解密需要一点时间，不过在机器性能不错且网络通畅的情况下其实是可以忽略的，都是毫秒级别的差距。

上游 DNS 服务器输入框下面有几个单选项，字面理解应该是解析策略、模式之类的选项，官方暂时没有给出详细介绍，所以博主根据字面含义和自身实际体验总结如下：

负载均衡：使用加权随机算法来选择最快的服务器。用到了算法，这就很玄学了。实际其实就是随机选择一个上游 DNS 服务器中的一个进行解析请求，哪个延迟低就更偏向于用哪一个。
并行请求：同时请求所有上游 DNS 服务器，取最快给出的响应结果，所以解析速度很快。在上游 DNS 服务器设置合理的情况下属于万金油方案，解析速度和访问速度都很快。所以也非常适合上游 DNS 服务器连接延迟大和不稳定的情况，就比如科学魔法爱国上网使用场景。
最快的 IP 地址：同时请求所有上游 DNS 服务器，在所有响应结果中选出延迟最低且可用的 IP。因为要等待所有上游 DNS 服务器响应结果，而且还要测试 IP 延迟及可用性，所以解析速度会很慢。只适合上游 DNS 服务器延迟特别低且网络非常稳定的场景，否则实际使用中可能会遇到首次打开网页非常慢，甚至可能打不开，要多刷新几次。再者低延迟 IP 不一定速度就快，还要看实际负载情况，所以这个方案的实际可用性是最差的。
Bootstrap DNS 服务器
Boot­strap DNS 服务器（引导 DNS 服务器）的作用只是解析上游 DoT/​DoH 技术 DNS 服务器的域名，所以这里需要填写使用 UDP 协议的传统 DNS 服务器 IP 地址。


同样的这里根据网络环境的不同推荐两组：

中国大陆

119.29.29.29
119.28.28.28
223.5.5.5
223.6.6.6
国际

8.8.8.8
8.8.4.4
9.9.9.11
149.112.112.11
设置完点击测试上游服务器，没有问题点保存即可。

TIPS: 这里也可以留空，使用后面将要提到的 DNS 重写功能把 DoT/​DoH DNS 服务器的域名直接指向它的 IP 是一种更优雅的使用方式。


DNS 服务设定
速度限制：0
使用 EDNS ：前面提及的上游 DNS 服务器都是支持 EDNS (ECS) 的，它有助于获取到更合适的 CDN 节点，建议勾选。
使用 DNSSEC : 用于效验 DNS 记录的签名，防止 DNS 缓存被投毒，建议勾选。勾选后会在日志页面请求列显示小绿锁图标。  很慢，要关。
禁用 IPv6 ：丢弃 IPv6 的 DNS 查询。在本地网络和网站都支持 IPv6 会优先使用 IPv6 去访问网站，但目前 IPv6 的建设还处于初级阶段，大多数地区的 IPv6 网络体验都一般。还有一些代理软件对 IPv6 支持不佳，开启后可能会影响国际互联网的访问。如果对此没有特殊需求，那么直勾选即可，这样既不影响 BT 软件连接 IPv6 网络，又可以优先使用 IPv4 来上网。如果只有 IPv4 ，那么是否勾选没有区别。


DNS 缓存配置
先简单科普一下 TTL ，它是英语 Time To Live 的简称，中文翻译为 “存活时间”。放在 DNS 解析中意为一条域名解析记录在 DNS 服务器中的存留时间，单位是秒。

正常情况下 TTL 默认 0 即可，即从上游 DNS 服务器获取 TTL 值。如果你所部署的网络环境到上游 DNS 服务器的延迟比较高，那么可以适当增加 TTL 值，让缓存更持久，短时间内请求同样域名的解析会直接从缓存中读取，实现秒解析。不过 TTL 值不宜过大，不然会导致记录不能及时更新，结果是网站无法正常打开。据博主观察目前多数域名的 TTL 值普遍在 300 以内，所以给出以下设置参考值：

覆盖最小 TTL 值：600
覆盖最大 TTL 值：3600


过滤器
DNS 封锁清单
这里是人民群众喜闻乐见的去广告环节。


吐槽：封锁清单这个词严重怀疑是机翻，而下面的绿色按钮是添加阻止列表。博主在查看 Ad­Guard Home 的源码后发现简体中文的翻译有很多不统一的地方，然后花了几个小时帮助他们改进了大量的翻译，可能在后续的版本中就不再叫封锁清单了。
使用官方默认的 AdGuard DNS filter 规则的效果对于中国大陆的网络而言属于聊胜于无，所以需要添加一些其它的规则。然而规则并不是越多越好，多了会影解析速度，真正需要的是高质量。博主个人比较推荐 anti-AD 和 halflife 这两个规则。



-----------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------


adguard home docker macvlan


https://post.smzdm.com/p/arq2zvvg/
NAS上使用Docker搭建AdGuard Home，实现全屋网页视频去广告 

关于端口映射这里，详情页页做出了具体说明，虽说端口很多，但是我们真正用到的其实就前面三个：53，67，3000。不过67和68端口因为是UDP协议，很多地方都用不了，可以设置也可以不设置。至于后面的我用翻译软件看了下，貌似是服务器用的，咱们一般人用不上，可以不管它~
PS：这里给大家说明一下，“53”是它的拦截协议端口，“3000”是它的默认后台的访问端口。

--------------------------

https://blog.csdn.net/zhengyukong/article/details/140075777
AdGuard Home Docker 宝塔部署和常见问题(值得收藏)


docker pull adguard/adguardhome


docker network create \
    --driver macvlan \
    --subnet=192.168.88.0/24 \
    --gateway=192.168.88.254 \
    --opt parent=br-lan \
    adguard-macvlan

docker run -d --name adguard-home \
    --network adguard-macvlan \
    -p 3000:3000 \
    -p 53:53/tcp -p 53:53/udp \
    -v /path/to/adguard_home_data:/etc/adguardhome \
    adguard/adguardhome

请根据你的网络实际情况调整--subnet、--gateway以及--opt parent参数。
-d 表示以后台模式运行容器。
--name adguard-home 指定容器的名称为adguard-home。
-p 参数分别映射了容器的HTTP（3000）、DNS（TCP 53）和DNS（UDP 53）端口到主机的相应端口。
-v /path/to/adguard_home_data:/etc/adguardhome 挂载一个宿主机目录到容器的 /etc/adguardhome 目录，用于持久化配置文件和数据。请将 /path/to/adguard_home_data 替换为你希望在宿主机上用于存放AdGuard Home数据的实际路径。

--------------------------


docker pull adguard/adguardhome:v0.107.52

docker network create \
    --driver macvlan \
    --subnet=192.168.11.0/24 \
    --gateway=192.168.11.1 \
    --opt parent=eth0 \
    macnet

docker network create -d macvlan --subnet=192.168.11.0/24 --gateway=192.168.11.1 -o parent=eth0 macnet
 docker network ls命令 可以看到网络macnet已建立成功

在 host1 运行容器 c1，并指定使用 macvlan 网络：
docker run -itd --name c1 --ip=172.16.10.2 --network mac1 busybox
docker run -itd --name adguard-macvlan --ip 192.168.11.16 --network macnet adguard/adguardhome:v0.107.52


docker run -itd --name adguard-home \
    --ip 192.168.11.16 \
    --network macnet \
    -p 3000:3000 \
    -p 53:53/tcp -p 53:53/udp \
    -v /srv/dev-disk-by-uuid-d67261a5-c100-461e-be0c-da12baa203fd/adguardhome/workdir:/opt/adguardhome/work \
    -v /srv/dev-disk-by-uuid-d67261a5-c100-461e-be0c-da12baa203fd/adguardhome/confdir:/opt/adguardhome/conf \
    adguard/adguardhome:v0.107.52

请根据你的网络实际情况调整--subnet、--gateway以及--opt parent参数。
-d 表示以后台模式运行容器。
--name adguard-home 指定容器的名称为adguard-home。
-p 参数分别映射了容器的HTTP（3000）、DNS（TCP 53）和DNS（UDP 53）端口到主机的相应端口。
-v /path/to/adguard_home_data:/etc/adguardhome 挂载一个宿主机目录到容器的 /etc/adguardhome 目录，用于持久化配置文件和数据。请将 /path/to/adguard_home_data 替换为你希望在宿主机上用于存放AdGuard Home数据的实际路径。


-----------------------------------

https://blog.51cto.com/u_16099219/11354121
群晖 mac nfs 群晖 macvlan 多个网心云

创建macvlan网络（基于物理网卡）
    docker network create --driver macvlan --subnet 172.18.18.0/24 --gateway 172.18.18.1 -o parent=ens33 macvlan_net1    
        #一个macvlan网络将会占用一块网卡，在这块网卡上进行虚拟化；
        #macvlan网络可以指定占用vlan设备！
        #创建macvlan网络，并不会自动同步到其他host；所以其他host的macvlan网络也需要创建；容器IP需要人工规划。
        
运行容器
    docker run -it --name macvlan_container1 --ip 172.18.18.212 --network macvlan_net1 centos
    docker run -it --name macvlan_container2 --ip 172.18.18.210 --network macvlan_net1 centos

-----------------------------------

https://zhuanlan.zhihu.com/p/616504632
Docker 网络模型之 macvlan 详解，图解，实验完整

